// Code generated by ent, DO NOT EDIT.

package loginlog

import (
	"time"
)

const (
	// Label holds the string label denoting the loginlog type in the database.
	Label = "login_log"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldIPAddr holds the string denoting the ip_addr field in the database.
	FieldIPAddr = "ip_addr"
	// FieldLoginTime holds the string denoting the login_time field in the database.
	FieldLoginTime = "login_time"
	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "user"
	// Table holds the table name of the loginlog in the database.
	Table = "login_logs"
	// UserTable is the table that holds the user relation/edge.
	UserTable = "login_logs"
	// UserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserInverseTable = "users"
	// UserColumn is the table column denoting the user relation/edge.
	UserColumn = "user_login_logs"
)

// Columns holds all SQL columns for loginlog fields.
var Columns = []string{
	FieldID,
	FieldIPAddr,
	FieldLoginTime,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "login_logs"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"user_login_logs",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultLoginTime holds the default value on creation for the "login_time" field.
	DefaultLoginTime func() time.Time
	// IDValidator is a validator for the "id" field. It is called by the builders before save.
	IDValidator func(int) error
)
